Enrollment Number,What is the primary use of algorithms and data structures in computer science? (Theoretical) (Understanding Data Structures and Algorithms),What is the time complexity of searching for an element in an unsorted array? (Understanding) (Time Complexity of Searching in an Unsorted Array),What is the advantage of arrays in terms of memory usage? (Remembering) (Characteristics of Arrays),What is the disadvantage of arrays in terms of size? (Logical Reasoning) (Disadvantages of Arrays),What is the primary difference between singly linked lists and doubly linked lists? (Pseudocode) (Doubly Linked Lists vs. Singly Linked Lists),What is the advantage of doubly linked lists in terms of deletion? (Understanding) (Advantages of Doubly Linked Lists),What is the time complexity of summing elements in an array using the provided pseudocode? (Pseudocode) (Pseudocode for Summing Elements in an Array),What is the space complexity of summing elements in an array using the provided pseudocode? (Remembering) (Analysis),What is the primary property of a Binary Search Tree? (Theoretical) (Binary Search Trees),What is the time complexity of search operations in a balanced Binary Search Tree? (Understanding) (Time Complexity of Binary Search Trees),What is the primary application of Max-Heaps? (Logical Reasoning) (Max-Heap Characteristics),What is the time complexity of insertion and deletion operations in a Max-Heap? (Pseudocode) (Operations and Time Complexities),What is the primary advantage of balanced trees like AVL and Red-Black trees? (Remembering) (Balanced Trees: AVL and Red-Black Trees),What is the difference between AVL trees and Red-Black trees? (Theoretical) (Balanced Trees: AVL and Red-Black Trees),What is the primary use of arrays in real-world applications? (Logical Reasoning) (Applications of Arrays),What is the advantage of singly linked lists in terms of memory usage? (Remembering) (Doubly Linked Lists vs. Singly Linked Lists),What is the disadvantage of doubly linked lists in terms of complexity? (Logical Reasoning) (Disadvantages of Doubly Linked Lists),What is the primary application of Binary Search Trees? (Understanding) (Applications of Binary Search Trees),What is the time complexity of searching for an element in a Binary Search Tree? (Pseudocode) (Time Complexity of Binary Search Trees),What is the primary property of a Max-Heap? (Theoretical) (Max-Heap Characteristics),What is the advantage of balanced trees in terms of time complexity? (Logical Reasoning) (Balanced Trees: AVL and Red-Black Trees),What is the primary application of linked lists? (Understanding) (Applications of Linked Lists),What is the disadvantage of arrays in terms of insertion and deletion? (Remembering) (Disadvantages of Arrays),What is the advantage of arrays in terms of direct access? (Logical Reasoning) (Advantages of Arrays),What is the primary application of heaps? (Understanding) (Real-World Applications of Heaps),What is the time complexity of deletion in a Binary Search Tree? (Pseudocode) (Time Complexity of Binary Search Trees),What is the primary advantage of arrays in terms of simplicity? (Logical Reasoning) (Advantages of Arrays),What is the disadvantage of linked lists in terms of memory usage? (Remembering) (Disadvantages of Linked Lists),What is the primary application of Binary Search Trees in real-world scenarios? (Understanding) (Applications of Binary Search Trees),What is the advantage of balanced trees in terms of height? (Theoretical) (Balanced Trees: AVL and Red-Black Trees)
23071234,"To build efficient, optimized solutions to complex problems",O(log n),"Arrays use contiguous memory, making them memory-efficient",Arrays are not suitable for small datasets,The memory usage,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(n),Database indexing,O(n),They are less efficient in terms of time complexity,"AVL trees use rotations, while Red-Black trees use coloring",Game development,They use more memory than doubly linked lists,They are only used for small datasets,File system navigation,O(log n),The value of each node is greater than or equal to its children,They are only used for small datasets,Memory management systems,They are more memory-efficient than linked lists,They are more complex than linked lists,Priority queues,O(n),They are less memory-efficient than linked lists,They use more memory than arrays,Browser history navigation,They are more complex than unbalanced trees
23070140,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays are only used for dynamic data,The memory usage,It is more complex to delete a node,O(n),O(n),The value of the left child is less than its parent node,O(log n),Priority queues,O(n log n),They are more complex to implement,"AVL trees use rotations, while Red-Black trees use coloring",Maintaining a list of predefined settings or configuration values,They use less memory than doubly linked lists,They are more complex than singly linked lists,Database indexing,O(n log n),The value of each node is equal to its children,They are more efficient in terms of time complexity,All of the above,They are more memory-efficient than linked lists,They are more complex than linked lists,All of the above,O(1),They have a straightforward structure,They use more memory than arrays,File system navigation,They have a smaller height than unbalanced trees
23070739,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are more memory-efficient than linked lists,They are less memory-efficient than linked lists,All of the above,O(log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070918,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is greater than its parent node,O(log n),Database indexing,O(n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),,,,They are slower than linked lists,They allow for direct access to elements,All of the above,O(log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070372,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They allow for direct access to elements,All of the above,O(n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
24030153,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They allow for direct access to elements,All of the above,O(log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070041,"To build efficient, optimized solutions to complex problems",O(log n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The memory usage,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Database indexing,O(n log n),They ensure the height of the tree remains small,"AVL trees are used for small datasets, while Red-Black trees are used for large datasets",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are less efficient in terms of time complexity,All of the above,They are more memory-efficient than linked lists,They are less memory-efficient than linked lists,All of the above,O(n log n),They are slower than linked lists,They are only used for small datasets,All of the above,They are less efficient than unbalanced trees
23070398,"To build efficient, optimized solutions to complex problems",O(log n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The memory usage,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Browser history navigation,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",Maintaining a list of predefined settings or configuration values,They are not suitable for dynamic data,They are less complex than singly linked lists,All of the above,O(log n),The value of each node is less than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are more memory-efficient than linked lists,They are less memory-efficient than linked lists,All of the above,O(n log n),They are less memory-efficient than linked lists,They use more memory than arrays,All of the above,They are less efficient than unbalanced trees
23070503,"To build efficient, optimized solutions to complex problems",O(log n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),File system navigation,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",Computer graphics,They use more memory than doubly linked lists,They are more complex than singly linked lists,Browser history navigation,O(1),The value of each node is less than or equal to its children,They are more efficient in terms of time complexity,Undo functionality in applications,They are slower than linked lists,They are slower than linked lists,Database indexing,O(n log n),They are more complex than linked lists,They are only used for small datasets,All of the above,They are less efficient than unbalanced trees
23071489,"To build efficient, optimized solutions to complex problems",O(n log n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(1),O(n),The value of the left child is greater than its parent node,O(log n),Database indexing,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",Maintaining a list of predefined settings or configuration values,They use more memory than doubly linked lists,They are not suitable for dynamic data,File system navigation,O(log n),The value of each node is equal to its children,They are only used for small datasets,All of the above,They are faster than linked lists,They allow for direct access to elements,Priority queues,O(log n),They have a straightforward structure,They use less memory than arrays,All of the above,They have a smaller height than unbalanced trees
23071453,To understand the intricacies of computer hardware,O(n),Arrays are not suitable for large datasets,Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(n log n),The value of the left child is greater than its parent node,O(log n),Priority queues,O(n log n),They are less efficient in terms of time complexity,"AVL trees use rotations, while Red-Black trees use coloring",Computer graphics,They use more memory than doubly linked lists,They are only used for small datasets,File system navigation,O(n log n),The value of each node is greater than or equal to its children,They are only used for small datasets,Undo functionality in applications,They are more memory-efficient than linked lists,They are more complex than linked lists,Scheduling systems,O(n log n),They are less memory-efficient than linked lists,They are only used for small datasets,Browser history navigation,They have a smaller height than unbalanced trees
24030020,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They are only used for small datasets,"AVL trees use rotations, while Red-Black trees use coloring",Game development,They are only used for large datasets,They are more complex than singly linked lists,File system navigation,O(n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,Undo functionality in applications,They are slower than linked lists,They are slower than linked lists,All of the above,O(n),They are more complex than linked lists,They are only used for small datasets,All of the above,They have a smaller height than unbalanced trees
24030149,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They allow for direct access to elements,All of the above,O(log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23071531,"To build efficient, optimized solutions to complex problems",O(log n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(1),O(log n),The value of the left child is less than its parent node,O(n log n),Database indexing,O(n log n),They ensure the height of the tree remains small,"AVL trees are used for small datasets, while Red-Black trees are used for large datasets",Maintaining a list of predefined settings or configuration values,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(n log n),The value of each node is less than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are less complex than linked lists,They allow for direct access to elements,Scheduling systems,O(n log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a larger height than unbalanced trees
23070530,To understand the intricacies of computer hardware,O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is greater than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",Game development,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They allow for direct access to elements,All of the above,O(log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23071586,"To build efficient, optimized solutions to complex problems",O(log n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is more complex to delete a node,O(1),O(1),The value of the left child is less than its parent node,O(log n),Database indexing,O(n log n),They are more complex to implement,"AVL trees are balanced, while Red-Black trees are not",Maintaining a list of predefined settings or configuration values,They use less memory than doubly linked lists,They are more complex than singly linked lists,Browser history navigation,O(n),The value of each node is less than or equal to its children,They are more efficient in terms of time complexity,Memory management systems,They are more memory-efficient than linked lists,They are more complex than linked lists,All of the above,O(log n),They are less memory-efficient than linked lists,They are only used for small datasets,Database indexing,They have a larger height than unbalanced trees
23070769,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",,They use more memory than doubly linked lists,They are more complex than singly linked lists,File system navigation,O(n),The value of each node is less than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are more memory-efficient than linked lists,They allow for direct access to elements,All of the above,O(log n),They are less memory-efficient than linked lists,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070101,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They allow for direct access to elements,All of the above,O(log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070719,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They allow for direct access to elements,All of the above,O(log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23071089,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(log n),The value of the left child is less than its parent node,O(log n),Browser history navigation,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They allow for direct access to elements,All of the above,O(log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a larger height than unbalanced trees
23071067,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use more memory than doubly linked lists,They are more complex than singly linked lists,File system navigation,O(n),The value of each node is less than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are more memory-efficient than linked lists,They allow for direct access to elements,All of the above,O(log n),They are less memory-efficient than linked lists,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070454,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is greater than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They are only used for large datasets,They are more complex than singly linked lists,All of the above,O(1),The value of each node is equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They are less memory-efficient than linked lists,All of the above,O(log n),They are more complex than linked lists,They are only used for small datasets,All of the above,They have a smaller height than unbalanced trees
23070620,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The number of nodes in the list,It is more complex to delete a node,O(n),O(n),The value of the left child is less than its parent node,O(n log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use less memory than doubly linked lists,They are only used for small datasets,All of the above,O(n log n),The value of each node is less than or equal to its children,They are not suitable for dynamic data,All of the above,They are slower than linked lists,They are slower than linked lists,All of the above,O(n log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070408,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Database indexing,O(log n),They ensure the height of the tree remains small,"AVL trees are balanced, while Red-Black trees are not",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They allow for direct access to elements,All of the above,O(log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070758,"To build efficient, optimized solutions to complex problems",O(1),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(n),The value of the left child is less than its parent node,O(1),Database indexing,O(log n),They ensure the height of the tree remains small,AVL trees are less efficient than Red-Black trees,All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is less than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They allow for direct access to elements,All of the above,O(n log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070351,To build complex software systems,O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(n log n),Priority queues,O(log n),They are less efficient in terms of time complexity,"AVL trees are used for small datasets, while Red-Black trees are used for large datasets",All of the above,They use more memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,,They are faster than linked lists,They are more complex than linked lists,All of the above,O(n log n),They are less memory-efficient than linked lists,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070318,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They are not suitable for dynamic data,They are only used for small datasets,File system navigation,O(n log n),,,,,,,,,,,
24030142,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is less than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,"AVL trees use rotations, while Red-Black trees use coloring",All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,They allow for direct access to elements,All of the above,O(log n),They have a straightforward structure,They use more memory than arrays,All of the above,They have a smaller height than unbalanced trees
23070744,"To build efficient, optimized solutions to complex problems",O(n),"Arrays use contiguous memory, making them memory-efficient",Arrays have a fixed size,The direction of traversal,It is faster to delete a node,O(n),O(1),The value of the left child is greater than its parent node,O(log n),Priority queues,O(log n),They ensure the height of the tree remains small,AVL trees are less efficient than Red-Black trees,All of the above,They use less memory than doubly linked lists,They are more complex than singly linked lists,All of the above,O(n log n),The value of each node is greater than or equal to its children,They are more efficient in terms of time complexity,All of the above,They are slower than linked lists,,All of the above,O(n log n),They are more complex than linked lists,They use less memory than arrays,All of the above,They have a larger height than unbalanced trees